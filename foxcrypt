#!/usr/bin/bash
# coding: utf-8

if [[ $EUID -ne 0 ]]; then
	echo "Must run script in sudo mode"
	set -x
	exit 1
fi

help_msg() {
	echo "$0 [OPTIONS] filepath"
	echo "Options:"
	echo -e "-new\tcreates a new encrypted disk from scratch or overrides an existing disk"
	echo -e "-open\topens an encrypted disk"
	echo -e "-close\tcloses an encrypted disk"
}


check_encryption_status() {
	if lsblk -f -o FSTYPE | grep -q 'crypto_LUKS'; then
		return 1
	else
		return 0
	fi
}

new_disk() {
	echo -ne "1.Format partition\n2.Format disk\n"
	local part
	read opt
	if [ $opt -eq 1 ]; then
		echo -n "Enter partition name: "
		read part
		if [ ! -b "$part" ]; then
			echo "Partition does not exist"
			exit 1
		fi
	elif [ $opt -eq 2 ]; then
		echo "Select a disk: "
		lsblk -o NAME,SIZE,TYPE | grep disk
		read disk
		echo -ne "d\nn\np\n\n\n\nw\n" | sudo fdisk /dev/$disk  > /dev/null 2>&1
		part="/dev/$disk"1
		echo "Created partition on $disk"
	fi
	sudo cryptsetup -v luksFormat "$part"
	echo "Enter password for additional setup"
	sudo cryptsetup -v luksOpen "$part" MyContainer
	sudo mkfs.ext4 /dev/mapper/MyContainer
	sudo cryptsetup -v luksClose MyContainer
	echo "Setup done"
}

local mapper_name

open_disk() {
	echo -n "Enter container name: "
	read mapper_name
	if !check_encryption_status; then
		echo "No encrypted disk exists!"
		exit 1
	fi
	part="$(lsblk -f -l -o NAME,FSTYPE | grep 'crypto_LUKS' | awk '{ print \"/dev/\"$1; }')"
	sudo cryptsetup -v luksOpen "$part" "$mapper_name"
	sudo mkdir "/mnt/$mapper_name"
	sudo mount "/dev/mapper/$mapper_name" "/mnt/$mapper_name"
	sudo chown "$USER":"$USER" "/mnt/$mapper_name"
	echo "Mounted encrypted volume at: /mnt/$mapper_name"
}

close_disk() {
	sudo umount "/mnt/$mapper_name"
	sudo cryptsetup -v luksClose "$mapper_name"
}

case $1 in
	-new) 
		echo "Creating a new disk"
		new_disk $2
	;;
	-open)
		echo "Opening a new disk"
	;;
	-close)
		echo "Closing an open disk"
	;;
	*)
		help_msg
	;;
esac
