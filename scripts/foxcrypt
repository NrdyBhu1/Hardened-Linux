#!/usr/bin/bash
# coding: utf-8

if [[ $EUID -ne 0 ]]; then
	echo "Must run script in sudo mode"
	exit 1
fi

help_msg() {
	echo "$0 [OPTIONS] filepath"
	echo "Options:"
	echo -e "-new\tcreates a new encrypted disk from scratch or overrides an existing disk"
	echo -e "-open\topens an encrypted disk"
	echo -e "-close\tcloses an encrypted disk"
}


check_encryption_status() {
	if lsblk -f -o FSTYPE | grep -q 'crypto_LUKS'; then
		return 0
	else
		return 1
	fi
}

new_disk() {
	echo -ne "1.Format partition\n2.Format disk\n"
	local part
	read -p "[1/2]: " opt
	if [[ $opt -eq 1 ]]; then
		read -p "Enter full partition path (/dev/sXXX): " part
		if [ ! -b "$part" ]; then
			echo "Partition does not exist"
			exit 1
		fi
	elif [[ $opt -eq 2 ]]; then
		echo "Select a disk: "
		lsblk -o NAME,SIZE,TYPE | grep disk
		read disk
		echo -ne "d\nn\np\n\n\n\nw\n" | sudo fdisk /dev/$disk  > /dev/null 2>&1
		part="/dev/${disk}1"
		echo "Created partition on $disk"
	fi

	cryptsetup -v luksFormat "$part"
	echo "Enter password for additional setup"
	cryptsetup -v luksOpen "$part" MyContainer
	mkfs.ext4 /dev/mapper/MyContainer
	cryptsetup -v luksClose MyContainer
	echo "Setup done"
}

open_disk() {
	read -p "Enter container name: " mapper_name

	if !check_encryption_status; then
		echo "No encrypted volumes exist!"
		exit 1
	fi

	part="$(lsblk -f -l -o NAME,FSTYPE | grep 'crypto_LUKS' | awk '{ print \"/dev/\"$1; }')"
	if [[ -z $part ]]; then
		echo "Could not detect any encrypted volume at $part"
		exit 1
	fi

	cryptsetup -v luksOpen "$part" "$mapper_name"
	mkdir -p "/mnt/$mapper_name"
	mount "/dev/mapper/$mapper_name" "/mnt/$mapper_name"
	chown "$USER":"$USER" "/mnt/$mapper_name"
	echo "Mounted encrypted volume at: /mnt/$mapper_name"
	echo "$mapper_name" > /tmp/active_mapper_name
}

close_disk() {
	if [[ ! -f /tmp/active_mapper_name ]]; then
		echo "No active encrypted volumes mounted via this script"
		exit 0
	fi

	mapper_name="$(< /tmp/active_mapper_name)"

	umount "/mnt/$mapper_name"
	cryptsetup -v luksClose "$mapper_name"
	rm -rf "/mnt/$mapper_name"
	rm /tmp/active_mapper_name
	echo "Closed the encrypted volume"
}

case $1 in
	-new) 
		echo "Creating a new disk"
		new_disk $2
	;;
	-open)
		echo "Opening a new disk"
		open_disk
	;;
	-close)
		echo "Closing an open disk"
		close_disk
	;;
	*)
		help_msg
	;;
esac
